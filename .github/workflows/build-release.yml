name: Build release

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build_release:
    runs-on: windows-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create .env file
        env:
          ANALYZE: ${{ secrets.ANALYZE }}
          BRIDGE_URL: ${{ secrets.BRIDGE_URL }}
          CRYPTO_KEY: ${{ secrets.CRYPTO_KEY }}
          DESKTOP_HEADER: ${{ secrets.DESKTOP_HEADER }}
          DRIVE_URL: ${{ secrets.DRIVE_URL }}
          NEW_CRYPTO_KEY: ${{ secrets.NEW_CRYPTO_KEY }}
          NOTIFICATIONS_URL: ${{ secrets.NOTIFICATIONS_URL }}
          PAYMENTS_URL: ${{ secrets.PAYMENTS_URL }}
          PORT: ${{ secrets.PORT }}
          SM_API_KEY: ${{ secrets.SM_API_KEY }}
          SM_CLIENT_CERT_PASSWORD: ${{ secrets.SM_CLIENT_CERT_PASSWORD }}
          SM_CLIENT_CERT_FILE_B64: ${{ secrets.SM_CLIENT_CERT_FILE_B64 }}
        run: |
          {
            echo "ANALYZE=$ANALYZE"
            echo "BRIDGE_URL=$BRIDGE_URL"
            echo "CRYPTO_KEY=$CRYPTO_KEY"
            echo "DESKTOP_HEADER=$DESKTOP_HEADER"
            echo "DRIVE_URL=$DRIVE_URL"
            echo "NEW_CRYPTO_KEY=$NEW_CRYPTO_KEY"
            echo "NOTIFICATIONS_URL=$NOTIFICATIONS_URL"
            echo "PAYMENTS_URL=$PAYMENTS_URL"
            echo "PORT=$PORT"
            echo "SM_API_KEY=$SM_API_KEY"
            echo "SM_CLIENT_CERT_PASSWORD=$SM_CLIENT_CERT_PASSWORD"
            echo "SM_CLIENT_CERT_FILE_B64=$SM_CLIENT_CERT_FILE_B64"
          } > .env

      - run: cat .env
