module.exports = {
  plugins: ['import', 'unicorn', '@tanstack/query', 'sonarjs'],
  extends: [
    '@internxt/eslint-config-internxt',
    'plugin:prettier/recommended',
    'plugin:@tanstack/eslint-plugin-query/recommended',
    'plugin:sonarjs/recommended-legacy',
  ],
  parser: '@typescript-eslint/parser',
  ignorePatterns: ['assets.d.ts', 'node_modules', 'schema.ts'],
  overrides: [
    {
      files: ['*.ts', '*.tsx'],
      parserOptions: {
        tsconfigRootDir: __dirname,
        project: './tsconfig.json',
      },
    },
    {
      files: ['*.test.*'],
      rules: {
        'sonarjs/assertions-in-tests': 'off',
        'sonarjs/constructor-for-side-effects': 'off',
        'sonarjs/function-return-type': 'off',
        'sonarjs/no-empty-test-file': 'off',
        'sonarjs/os-command': 'off',
      },
    },
  ],
  rules: {
    '@typescript-eslint/await-thenable': 'warn',
    '@typescript-eslint/ban-ts-comment': 'warn',
    '@typescript-eslint/ban-types': 'off',
    '@typescript-eslint/consistent-type-definitions': ['warn', 'type'],
    '@typescript-eslint/no-empty-function': 'off',
    '@typescript-eslint/no-empty-interface': 'off',
    '@typescript-eslint/no-floating-promises': 'warn',
    '@typescript-eslint/no-unused-expressions': 'error',
    'array-callback-return': 'warn',
    'import/no-default-export': 'warn',
    'max-len': ['error', { code: 140, ignoreStrings: true, ignoreTemplateLiterals: true }],
    'no-async-promise-executor': 'warn',
    'no-await-in-loop': 'off',
    'no-empty': 'off',
    'no-extra-boolean-cast': 'error',
    'no-throw-literal': 'error',
    'no-unused-expressions': 'off',
    'no-use-before-define': ['warn', { functions: false }],
    'object-shorthand': 'error',
    'require-await': 'warn',
    'sonarjs/array-callback-without-return': 'off',
    'sonarjs/cognitive-complexity': 'warn',
    'sonarjs/different-types-comparison': 'warn',
    'sonarjs/no-empty-collection': 'off',
    'sonarjs/no-identical-functions': 'off',
    'sonarjs/no-ignored-exceptions': 'error',
    'sonarjs/no-nested-conditional': 'warn',
    'sonarjs/no-nested-functions': 'warn',
    'sonarjs/no-os-command-from-path': 'off',
    'sonarjs/no-redundant-optional': 'off',
    'sonarjs/no-selector-parameter': 'off',
    'sonarjs/no-small-switch': 'off',
    'sonarjs/no-useless-intersection': 'warn',
    'sonarjs/prefer-read-only-props': 'off',
    'sonarjs/pseudo-random': 'warn',
    'sonarjs/public-static-readonly': 'warn',
    'sonarjs/redundant-type-aliases': 'off',
    'sonarjs/slow-regex': 'off',
    'sonarjs/todo-tag': 'off',
    'unicorn/filename-case': ['warn', { case: 'kebabCase' }],
    'unicorn/prefer-node-protocol': 'error',
    'padding-line-between-statements': [
      'warn',
      { blankLine: 'always', prev: '*', next: 'block' },
      { blankLine: 'always', prev: '*', next: 'class' },
      { blankLine: 'always', prev: '*', next: 'function' },
      { blankLine: 'always', prev: 'multiline-expression', next: 'multiline-expression' },
    ],
  },
};
